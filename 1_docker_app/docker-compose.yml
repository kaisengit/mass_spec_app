x-env_postgres: &env_postgres
  POSTGRES_USER: '${DB_USER}'
  POSTGRES_PASSWORD: '${DB_PASSWORD}'
  POSTGRES_DB: '${DB_DATABASE}'
  DATABASE_URL: '${DATABASE_URL}'
  DATABASE_URL_TEST: '${DATABASE_URL_TEST}'

x-env_timezone: &env_timezone
  TZ: "Europe/Berlin"

services:
  ms-app:
    image: ms-app:latest
    container_name: ms-app
    restart: unless-stopped
    environment:
      <<: [ *env_timezone, *env_postgres ]
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      ms-db:
        condition: service_healthy
      ms-caddy:
        condition: service_started
    ports:
      - '${FRONTEND_PORT}:8255'

  ms-db:
    image: postgres:16.4
    container_name: ms-db
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      <<: [ *env_postgres, *env_timezone ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  ms-caddy:
    image: caddy:2.8.4
    container_name: ms-caddy
    restart: unless-stopped
    environment:
      <<: [ *env_timezone ]
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile.txt:/etc/caddy/Caddyfile
      - ./caddy/site:/srv
      - ./caddy/caddy_data:/data
      - ./caddy/caddy_config:/config
